version: '3.8'

services:
  # MySQL database
  db:
    image: mysql:5.7
    container_name: node-db
    restart: unless-stopped
    env_file: ./.env
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: $DB_NAME
      MYSQL_ROOT_PASSWORD: $DB_PASS
    volumes:
    # This for init a table
    #- ./docker-compose/mysql:/docker-entrypoint-initdb.d
      - ./docker-compose/mysql:/var/lib/mysql
    stdin_open: true
    tty: true
    networks:
      - app-network

  # Node app
  nodejs:
    depends_on:
      - db
    build:
      context: ./
      dockerfile: Dockerfile
    image: nodejs
    container_name: node-app
    restart: unless-stopped
    env_file: ./.env
    environment:
      - DB_HOST=db
      - DB_USER=$DB_USER
      - DB_PASS=$DB_PASS
      - DB_NAME=$DB_NAME
      - DB_PORT=$DB_PORT
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules/
    networks:
      - app-network

  # webserver:
  #   image: nginx:mainline-alpine
  #   container_name: node-nginx
  #   restart: unless-stopped
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - web-root:/var/www/html
  #     - ./nginx-conf:/etc/nginx/conf.d
  #     - certbot-etc:/etc/letsencrypt
  #     - certbot-var:/var/lib/letsencrypt
  #   depends_on:
  #     - nodejs
  #   networks:
  #     - app-network

  # certbot:
  #   image: certbot/certbot
  #   container_name: certbot
  #   volumes:
  #     - certbot-etc:/etc/letsencrypt
  #     - certbot-var:/var/lib/letsencrypt
  #     - web-root:/var/www/html
  #   depends_on:
  #     - webserver
  #   command: certonly --webroot --webroot-path=/var/www/html --email ryanrahmans26@gmail.com --agree-tos --no-eff-email --staging -d pizi-api.ryanrahmans.com  -d www.pizi-api.ryanrahmans.com

# volumes:
#   certbot-etc:
#   certbot-var:
#   web-root:
#     driver: local
#     driver_opts:
#       type: none
#       device: /home/ubuntu/pizi-api/views/
#       o: bind

networks:
  app-network:
    driver: bridge
